- name: Evaluate project {{ cicd_project }}
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    kind: Project
    api_version: project.openshift.io/v1
    definition:
      metadata:
        name: "{{ cicd_project }}"

- name: Evalute Pipeline ServiceAccount Permissions
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    api_version: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    definition:
      metadata:
        name: pipeline-edit
        namespace: '{{ apps_project }}'
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: edit
      subjects:
        - kind: ServiceAccount
          name: pipeline
          namespace: '{{ cicd_project }}'

- name: Evaluate PVCs
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'tekton_pvc.yml.j2') }}"

- name: Evaluate Tasks
  retries: 5
  delay: 20
  register: result
  until:
    - result.failed == false
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    namespace: '{{ cicd_project }}'
    resource_definition: "{{ lookup('file', item) }}"
  loop:
    - task_3scale.yml
    - task_apicurio.yml

- name: Get 3scale system-seed secret
  kubernetes.core.k8s_info:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    kind: Secret
    name: system-seed
    namespace: '{{ threescale_project }}'
    api_version: v1
  register: r_system_seed
  until:
    - r_system_seed.resources is defined
    - r_system_seed.resources[0] is defined
  retries: 10
  delay: 15

- name: Set 3scale admin token
  ansible.builtin.set_fact:
    threescale_token: '{{ r_system_seed.resources[0].data.ADMIN_ACCESS_TOKEN | b64decode }}'

- name: Evaluate Pipeline
  retries: 5
  delay: 10
  register: result
  until:
    - result.failed == false
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: false
    state: present
    resource_definition: "{{ lookup('template', 'pipeline.yml.j2') }}"
